{{- if .Values.routes.gateway.enabled -}}
{{- $route := .Values.routes.gateway }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: {{ $route.kind | default "HTTPRoute" }}
metadata:
  name: {{ $route.name | default (include "mimir.resourceName" (dict "ctx" . "component" "gateway") ) }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "mimir.labels" (dict "ctx" . "component" "gateway") | nindent 4 }}
    {{- with $route.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with $route.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with $route.parentRefs }}
  parentRefs:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $route.hostnames }}
  hostnames:
    {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  rules:
    {{- if $route.additionalRules }}
    {{- tpl (toYaml $route.additionalRules) $ | nindent 4 }}
    {{- end }}
    - backendRefs:
        - name: {{ include "mimir.gateway.service.name" $ }}
          {{- /* port: {{ $.Values.mimir.gateway.service.port }} */}}
          port: 80
      {{- with $route.filters }}
      filters:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $route.matches }}
      matches:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if $route.auth.enabled -}}
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: {{ $route.name | default (include "mimir.resourceName" (dict "ctx" . "component" "gateway") ) }}
spec:
  targetRefs:
    - group: gateway.networking.k8s.io
      kind: {{ $route.kind }}
      name: {{ $route.name | default (include "mimir.resourceName" (dict "ctx" . "component" "gateway") ) }}
  basicAuth:
    users:
      name: {{ $route.auth.secret }}
{{- end }}
